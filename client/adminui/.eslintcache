[{"/home/mack/Documents/Admin/Admin-App/client/adminui/src/index.js":"1","/home/mack/Documents/Admin/Admin-App/client/adminui/src/App.js":"2","/home/mack/Documents/Admin/Admin-App/client/adminui/src/components/sidebar/sidebar.js":"3","/home/mack/Documents/Admin/Admin-App/client/adminui/src/components/overview/overview.js":"4","/home/mack/Documents/Admin/Admin-App/client/adminui/src/components/driverRegistration/driverRegistration.js":"5","/home/mack/Documents/Admin/Admin-App/client/adminui/src/components/rideOverview/rideOverview.js":"6","/home/mack/Documents/Admin/Admin-App/client/adminui/src/components/deliveryOverview/deliveryOverview.js":"7","/home/mack/Documents/Admin/Admin-App/client/adminui/src/components/driversList/driverList.js":"8","/home/mack/Documents/Admin/Admin-App/client/adminui/src/components/passengersList/passengerList.js":"9","/home/mack/Documents/Admin/Admin-App/client/adminui/src/components/partners/partnersAdmin.js":"10","/home/mack/Documents/Admin/Admin-App/client/adminui/src/components/partners/LoginFormPartner.js":"11"},{"size":578,"mtime":1611571578612,"results":"12","hashOfConfig":"13"},{"size":1289,"mtime":1612808452037,"results":"14","hashOfConfig":"13"},{"size":1330,"mtime":1612345384298,"results":"15","hashOfConfig":"13"},{"size":8001,"mtime":1611759405407,"results":"16","hashOfConfig":"13"},{"size":25889,"mtime":1612182750412,"results":"17","hashOfConfig":"13"},{"size":23183,"mtime":1612348000067,"results":"18","hashOfConfig":"13"},{"size":21075,"mtime":1612138722159,"results":"19","hashOfConfig":"13"},{"size":4595,"mtime":1612445563396,"results":"20","hashOfConfig":"13"},{"size":4238,"mtime":1612433368240,"results":"21","hashOfConfig":"13"},{"size":3593,"mtime":1612817504138,"results":"22","hashOfConfig":"13"},{"size":2365,"mtime":1612812598887,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"34ofk4",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mack/Documents/Admin/Admin-App/client/adminui/src/index.js",[],["53","54"],"/home/mack/Documents/Admin/Admin-App/client/adminui/src/App.js",["55"],"import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\n\n//Import components\nimport Overview from \"./components/overview/overview\"\nimport DriverRegistration from \"./components/driverRegistration/driverRegistration\"\nimport RideOverview from \"./components/rideOverview/rideOverview\"\nimport DeliveryOverview from \"./components/deliveryOverview/deliveryOverview\"\nimport DriverList from \"./components/driversList/driverList\"\nimport PassengerList from \"./components/passengersList/passengerList\"\nimport PartnersAdmin from \"./components/partners/partnersAdmin\"\nimport LoginFormPartner from \"./components/partners/LoginFormPartner\"\n\nfunction App() {\n  return (\n   <Router>\n     \n        <Route path=\"/\" exact component={Overview} />\n        <Route path=\"/driver-registration\"  component={DriverRegistration} />\n        <Route path= \"/trip-overview/rides\" component={RideOverview} />\n        <Route path =\"/trip-overview/deliveries\" component={DeliveryOverview} />\n        <Route path=\"/drivers\" component={DriverList} />\n        <Route path=\"/passengers\" component={PassengerList} />\n        <Route path=\"/partnerAdmin\" component={PartnersAdmin} />\n        <Route path=\"/login\" component={LoginFormPartner}  />\n   </Router>\n\n  );\n}\n\nexport default App;\n","/home/mack/Documents/Admin/Admin-App/client/adminui/src/components/sidebar/sidebar.js",["56"],"import { ProSidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';\nimport { BrowserRouter as Router, Link } from 'react-router-dom'  // Keep Router though not used in code\nimport 'react-pro-sidebar/dist/css/styles.css';\nimport './sidebar.scss'\n \nfunction Sidebar() {\n     \n    return(\n        <div className=\"sidebar\">\n            <ProSidebar>\n                <Menu iconShape=\"square\">\n                    <MenuItem><Link to=\"/\">Summary</Link></MenuItem> \n                    <MenuItem><Link to=\"/driver-registration\">Register Driver</Link></MenuItem>\n                    <SubMenu title=\"Trip Overview\">\n                        <SubMenu title=\"Windhoek\" >\n                            <MenuItem><Link to=\"/trip-overview/rides\">Rides</Link></MenuItem>\n                            <MenuItem><Link to=\"/trip-overview/deliveries\">Deliveries</Link></MenuItem>\n                        </SubMenu>\n                        <SubMenu title=\"Swakopmund\">\n                            <MenuItem>Not Available</MenuItem>\n                        </SubMenu>\n                    </SubMenu>\n                    <MenuItem><Link to=\"/drivers\">Drivers</Link></MenuItem>\n                    <MenuItem><Link to=\"/passengers\">Users </Link></MenuItem>\n                </Menu>\n            </ProSidebar>;\n        </div>\n    )\n} \n\nexport default Sidebar\n","/home/mack/Documents/Admin/Admin-App/client/adminui/src/components/overview/overview.js",[],"/home/mack/Documents/Admin/Admin-App/client/adminui/src/components/driverRegistration/driverRegistration.js",["57"],"import React, { Fragment, useState } from 'react'\nimport axios from 'axios'\nimport DatePicker from 'react-datepicker'\nimport './driverRegistration.css'\nimport Sidebar from '../sidebar/sidebar'\n\nconst left_form_style = {\n    border: \"1px solid #698dc7\",\n    borderWidth: 2,\n    borderRadius: 20,\n    padding: 25,\n    marginLeft: 20,\n    marginTop: 25\n}\nconst right_form_style = {\n    border: \"1px solid #698dc7\",\n    borderWidth: 2,\n    borderRadius: 20,\n    padding: 30,\n    marginRight: 25,\n    marginTop: 25\n}\nconst car_data_style = {\n    border: \"1px solid #698dc7\",\n    borderWidth: 2,\n    borderRadius: 20,\n    marginTop: 10,\n    padding: 40\n}\nconst DriverRegistration = () => {\n\n        let [name, setName] = useState('')\n        let [surname, setSurname] = useState('')\n        let [title, setTitle] = useState('')\n        let [personal_id_number, setPersonalIdNumber] = useState('')\n        let [phone_number, setPhoneNumber] = useState('')\n        let [email, setEmail] = useState('')\n        //let [password, setPassword] = useState('')\n        let [operation_clearances, setOperationClearances] = useState('')\n        let [delivery_provider, setDeliveryProvider] = useState('')\n\n        //  Files :\n        let [profile_picture, setProfilePicture] = useState('')\n        let [profile_picture_name, setProfilePictureName] = useState('Profile picture') \n\n        let [driver_licence_doc, setDriverLicenceDoc] = useState('')\n        let [driver_licence_doc_name, setDriverLicenceDocName] = useState(\"Driver's licence\") \n\n        let [copy_id_paper, setCopyIdPaper] = useState('')\n        let [copy_id_paper_name, setCopyIdPaperName] = useState('Personal ID')\n\n        let [copy_white_paper, setCopyWhitepaper] = useState('')\n        let [copy_white_paper_name, setCopyWhitepaperName] = useState('White paper')\n\n        let [copy_public_permit, setCopyPublicPermit] = useState('')\n        let [copy_public_permit_name, setCopyPublicPermitName] = useState('Public permit')\n\n        let [copy_blue_paper, setCopyBluePaper] = useState('')\n        let [copy_blue_paper_name, setCopyBluePaperName] = useState('Blue paper')\n        let [blue_paper_expiration, setBluePaperExpiration] = useState(new Date())\n        let [driver_licence_expiration, setDriverLicenceExpiration] = useState(new Date())\n\n        //  Bank Details :\n        let [bank_name, setBankName] = useState('')\n        let [account_number, setAccountNmber] = useState('')\n        let [branch_number, setBranchNumber] = useState('')\n        let [branch_name, setBranchName] = useState('')\n        \n        // Car data : \n        let [car_brand, setCarBrand] = useState('')\n        let [permit_number, setPermitNumber] = useState('')\n        let [taxi_number, setTaxiNumber] = useState('')\n        let [plate_number, setPlateNumber] = useState('')\n        let [max_passengers, setMaxPassengers] = useState(4)\n        let [vehicle_type, setVehicleType] = useState('')\n  \n        // car file:\n        let [taxi_picture, setTaxiPicture] = useState('')\n        let [taxi_picture_name, setTaxiPictureName] = useState('Taxi picture')\n\n       /* const deliveryProviderList = [\n            {\n                label:\"ebikesForAfrica\",\n                value:\"ebikesForAfrica\"\n            },\n            {\n                label:\"deliveryGuy\",\n                value:\"deliveryGuy\"\n            },\n            {\n                label:\"twoPointDelivery\",\n                value:\"twoPointDelivery\"\n            }\n        ] */\n\n        const onSubmit = async (e) => {\n            e.preventDefault()\n            // Crete a formData to contain all submitted information\n            const formData = new FormData()\n            formData.append('name', name)\n            formData.append('surname', surname)\n            formData.append('title', title)\n            formData.append('personal_id_number', personal_id_number)\n            formData.append('phone_number', phone_number)\n            formData.append('email', email)\n            //formData.append('password', password)\n            formData.append('operation_clearances', operation_clearances)\n            formData.append('delivery_provider', delivery_provider)\n\n            if (formData.get('operation_clearances') === \"Ride\") {\n                formData.set('delivery_provider', \"\")\n            }\n\n            formData.append('profile_picture', profile_picture)\n            formData.append('driver_licence_doc', driver_licence_doc)\n            formData.append('copy_id_paper', copy_id_paper)\n            formData.append('copy_white_paper', copy_white_paper)\n            formData.append('copy_public_permit', copy_public_permit)\n            formData.append('copy_blue_paper', copy_blue_paper)\n            formData.append('blue_paper_expiration', blue_paper_expiration)\n            formData.append('driver_licence_expiration', driver_licence_expiration)\n            formData.append('bank_name', bank_name)\n            formData.append('account_number', account_number)\n            formData.append('branch_number', branch_number)\n            formData.append('branch_name', branch_name)\n\n            // Car's data\n            formData.append('car_brand', car_brand)\n            formData.append('permit_number', permit_number)\n            formData.append('taxi_number', taxi_number)\n            formData.append('plate_number', plate_number)\n            formData.append('max_passengers', max_passengers)\n            formData.append('taxi_picture', taxi_picture)\n            formData.append('vehicle_type', vehicle_type)\n           \n            console.log(formData.get('title'))\n            console.log(formData.get('delivery_provider'))\n            console.log(formData.get('operation_clearances'))\n            console.log(formData.get('copy_id_paper'))\n            \n            // Send data to server\n            try {\n                const res = await axios.post('http://localhost:5556/upload', formData, {\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    } \n                })\n            \n                console.log(res.data)\n                alert(\"Successfully submitted\")\n    \n                \n            } catch(err) {\n                console.log(err)\n                alert(\"There was an error with the server, \" + \n                \"make sure all the fields were properly entered\")\n            }   \n        }\n\n        return (\n            <div>\n            <div className=\"wrapper\"> \n                <div className=\"left-column\">\n                    <Sidebar />\n                </div>\n                <div className=\"right-column\">\n                    <Fragment >\n                        <h1 style={{ textAlign: \"center\", marginBottom: 5, backgroundColor: \"#179eb3\" }}>\n                            Driver Registration</h1>\n                        <form onSubmit={onSubmit}> \n                        <div id=\"wrapper\">\n                            <div className=\"literal-info\" style={left_form_style}>\n                            <div className=\"form-group ml-4\">\n                                <label>Operation clearance </label>\n                                <select\n                                    required\n                                    className=\"form-control \"\n                                    style={{ width: 350 }}\n                                    value={operation_clearances}\n                                    onChange={(e) => { setOperationClearances(e.target.value) }}>\n                                        <option></option>\n                                <option key=\"Ride\" value=\"Ride\">Ride</option>\n                                <option key=\"Delivery\" value=\"Delivery\">Delivery</option>\n                                </select>\n                            </div>\n                            <div className=\"form-group ml-4\" style={{ display: operation_clearances==\"Delivery\"? \n                            'block':'none' }}>\n                                <label>Delivery Provider </label>\n                                <select\n                                    className=\"form-control\"\n                                    value={delivery_provider}\n                                    onChange={(e) => { setDeliveryProvider(e.target.value) }}>\n                                        <option></option>\n                                        <option value=\"ebikesForAfrica\">ebikesForAfrica</option>\n                                        <option value=\"deliveryGuy\">deliveryGuy</option>\n                                        <option value=\"twoPointDelivery\">twoPointDelivery</option>\n                                \n                                </select>\n                            </div>\n                            <div className=\"form-group ml-4\">\n                                    <label>Name: </label>\n                                    <input type=\"text\"\n                                        required\n                                        className=\"form-control\"\n                                        style={{ width: 350 }}\n                                        value={ name }\n                                        onChange={(e) => { setName(e.target.value)}}\n                                        />\n                            </div>\n                            <div className=\"form-group ml-4\">\n                                    <label>Surname: </label>\n                                    <input type=\"text\"\n                                        required\n                                        className=\"form-control\"\n                                        value={ surname }\n                                        onChange={(e) => { setSurname(e.target.value) }}\n                                        style={{ width: 350 }}\n                                        />\n                            </div>\n                            \n                            <div className=\"form-group ml-4\">\n                                <label>Title: </label>\n                                <select\n                                    required\n                                    className=\"form-control\"\n                                    style={{ width: 350 }}\n                                    value={ title }\n                                    onChange={(e) => { setTitle(e.target.value) }}>\n                                        <option></option>\n                                <option key=\"Mr\" value=\"Mr\">Mr</option>\n                                <option key=\"Ms.\" value=\"Ms.\">Ms.</option>\n                                <option key=\"Mrs\" value=\"Mrs\">Mrs</option>\n                                <option key=\"Miss\" value=\"Miss\">Miss</option>\n\n                                </select>\n                            </div>\n\n                            <div className=\"form-group ml-4\">\n                                    <label>Personal ID number: </label>\n                                    <input type=\"text\"\n                                        required\n                                        className=\"form-control\"\n                                        style={{ width: 350 }}\n                                        value={ personal_id_number }\n                                        onChange={(e) => { setPersonalIdNumber(e.target.value) }}\n                                        />\n                            </div>\n                            <div className=\"form-group ml-4\">\n                                    <label>Phone Number: </label>\n                                    <input type=\"text\"\n                                        required\n                                        className=\"form-control\"\n                                        style={{ width: 350 }}\n                                        value={ phone_number }\n                                        onChange={(e) => { setPhoneNumber(e.target.value) }}\n                                        />\n                            </div>\n                            <div className=\"form-group ml-4\">\n                                    <label>Email: </label>\n                                    <input type=\"email\"\n                                        required\n                                        className=\"form-control\"\n                                        style={{ width: 350 }}\n                                        value={ email }\n                                        onChange={(e) => { setEmail(e.target.value) }}\n                                        />\n                            </div>\n                            </div>\n                            \n                            <div className=\"files-info-bank\" style={right_form_style}>\n                                <div> <h3>Upload files</h3></div>\n                                <div className=\"custom-file\" >\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"customFile\" \n                                        onChange={(e) => { \n                                            setProfilePicture(e.target.files[0])\n                                            setProfilePictureName(e.target.files[0].name)\n                                        }} />\n                                    <label className=\"custom-file-label\" htmlFor=\"customFile\">\n                                        {profile_picture_name}\n                                    </label> \n                                </div>\n                                <div className=\"custom-file mt-2\" >\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"customFile\" \n                                        onChange={(e) => { \n                                            setDriverLicenceDoc(e.target.files[0])\n                                            setDriverLicenceDocName(e.target.files[0].name)\n                                        }} />\n                                    <label className=\"custom-file-label\" htmlFor=\"customFile\">\n                                        {driver_licence_doc_name}\n                                    </label> \n                                </div>\n                                <div className=\"custom-file mt-2\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"customFile\"\n                                        onChange={(e) => { \n                                            setCopyIdPaper(e.target.files[0])\n                                            setCopyIdPaperName(e.target.files[0].name)\n                                        }} />\n                                    <label className=\"custom-file-label\" htmlFor=\"customFile\">\n                                        {copy_id_paper_name}\n                                    </label> \n                                </div>\n                                <div className=\"custom-file mt-2\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"customFile\"\n                                        onChange={(e) => { \n                                            setCopyWhitepaper(e.target.files[0])\n                                            setCopyWhitepaperName(e.target.files[0].name)\n                                        }} />\n                                    <label className=\"custom-file-label\" htmlFor=\"customFile\">\n                                        {copy_white_paper_name}\n                                    </label> \n                                </div>\n                                <div className=\"custom-file mt-2\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"customFile\"\n                                        onChange={(e) => { \n                                            setCopyPublicPermit(e.target.files[0])\n                                            setCopyPublicPermitName(e.target.files[0].name)\n                                        }} />\n                                    <label className=\"custom-file-label\" htmlFor=\"customFile\">\n                                        {copy_public_permit_name}\n                                    </label> \n                                </div>\n                                <div className=\"custom-file mt-2\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"customFile\"\n                                        onChange={(e) => { \n                                            setCopyBluePaper(e.target.files[0])\n                                            setCopyBluePaperName(e.target.files[0].name)\n                                        }} />\n                                    <label className=\"custom-file-label\" htmlFor=\"customFile\">\n                                        {copy_blue_paper_name}\n                                    </label> \n                                </div>\n                                <div className=\"form-group mt-3\">\n                                    <label>Blue paper expiration date: </label>\n                                    <div>\n                                        <DatePicker\n                                            selected={blue_paper_expiration}\n                                            onChange={(date) => {setBluePaperExpiration(date)}} \n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"form-group mt-3\">\n                                    <label>Driver's licence expiration date: </label>\n                                    <div>\n                                        <DatePicker\n                                            selected={driver_licence_expiration}\n                                            onChange={(date) => {setDriverLicenceExpiration(date)}} \n                                        />\n                                    </div>\n                                </div>\n                                <br></br>\n                                <div style={{ marginTop: 6 }}> <h3> Bank Details</h3></div>\n                                <div className=\"form-group\">\n                                    <label>Bank name: </label>\n                                    <input type=\"text\"\n                                        required\n                                        className=\"form-control\"\n                                        value={ bank_name }\n                                        onChange={(e) => { setBankName(e.target.value) }}\n                                        />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Account number: </label>\n                                    <input type=\"text\"\n                                        required\n                                        className=\"form-control\"\n                                        value={ account_number }\n                                        onChange={(e) => { setAccountNmber(e.target.value) }}\n                                        />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Branch number: </label>\n                                    <input type=\"text\"\n                                        required\n                                        className=\"form-control\"\n                                        value={ branch_number }\n                                        onChange={(e) => { setBranchNumber(e.target.value) }}\n                                        />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Branch name: </label>\n                                    <input type=\"text\"\n                                        required\n                                        className=\"form-control\"\n                                        value={ branch_name }\n                                        onChange={(e) => { setBranchName(e.target.value) }}\n                                        />\n                                </div>\n\n                            </div>\n\n                            <div className=\"car-data\" style={ car_data_style }>\n                                <div style={{ width: 550}}><h3 style={{ width: 250, margin: \"auto\"}}>Car's data</h3></div>\n                                <div className=\"form-group\">\n                                    <label>Brand: </label>\n                                    <input type=\"text\"\n                                        required\n                                        className=\"form-control\"\n                                        value={ car_brand }\n                                        onChange={(e) => { setCarBrand(e.target.value) }}\n                                        />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Permit number: </label>\n                                    <input type=\"text\"\n                                        required\n                                        className=\"form-control\"\n                                        value={ permit_number }\n                                        onChange={(e) => { setPermitNumber(e.target.value) }}\n                                        />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Taxi number: </label>\n                                    <input type=\"text\"\n                                        required\n                                        className=\"form-control\"\n                                        value={ taxi_number }\n                                        onChange={(e) => { setTaxiNumber(e.target.value) }}\n                                        />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Plate number: </label>\n                                    <input type=\"text\"\n                                        required\n                                        className=\"form-control\"\n                                        value={ plate_number }\n                                        onChange={(e) => { setPlateNumber(e.target.value) }}\n                                        />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Maximum number of passengers: </label>\n                                    <input type=\"text\"\n                                        required\n                                        className=\"form-control\"\n                                        value={ max_passengers }\n                                        onChange={(e) => { setMaxPassengers(e.target.value) }}\n                                        />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Car category (select): </label>\n                                    <select\n                                        required\n                                        className=\"form-control\"\n                                        style={{ width: 400 }}\n                                        value={ vehicle_type }\n                                        onChange={(e) => { setVehicleType(e.target.value) }}>\n                                            <option></option>\n                                    <option key=\"normalTaxiEconomy\" value=\"normalTaxiEconomy\">Economy (normal)</option>\n                                    <option key=\"electricEconomy\" value=\"electricEconomy\">Economy (electric)</option>\n                                    <option key=\"comfortNormalRide\" value=\"comfortNormalRide\">Comfort (normal)</option>\n                                    <option key=\"comfortElectricRide\" value=\"comfortElectricRide\">Comfort (electric)</option>\n                                    <option key=\"luxuryNormalRide\" value=\"luxuryNormalRide\">Luxury (normal)</option>\n                                    <option key=\"luxuryElectricRide\" value=\"luxuryElectricRide\">Luxury (electric)</option>\n\n                                    </select>\n                                    </div>\n                                <div className=\"custom-file mt-4\">\n                                    <input type=\"file\" className=\"custom-file-input\" id=\"customFile\"\n                                        onChange={(e) => { \n                                            setTaxiPicture(e.target.files[0])\n                                            setTaxiPictureName(e.target.files[0].name)\n                                        }} />\n                                    <label className=\"custom-file-label\" htmlFor=\"customFile\">\n                                        {taxi_picture_name}\n                                    </label> \n                                </div>\n\n                            </div>\n\n                            <div className=\"submit-registration\">\n                            <input\n                            style = {{ backgroundColor: 'green'}}\n                            type=\"submit\"\n                            value=\"Register\"\n                            className=\"btn btn-primary btn-block mt-4\"\n                            />\n                            </div>\n                        </div>\n                        </form>\n                    </Fragment>\n                </div>\n            </div>   \n            </div>\n        )\n    \n}\n\nexport default DriverRegistration","/home/mack/Documents/Admin/Admin-App/client/adminui/src/components/rideOverview/rideOverview.js",["58","59","60","61"],"import React, {useState, useEffect} from \"react\"\nimport io from 'socket.io-client'\nimport \"./rideOverview.css\"\nimport Sidebar from \"../sidebar/sidebar\"\n\n\n/**\n * @function GetCashWallet : Returns the total money of trips in progress, scheduled and completed\n *                          Of a given array of rides (cash and delivery returned)\n * @param {array} arrayData : An array of rides from either an API or Database of rides with known\n *                            keys. \n * \n */\n\nfunction GetCashWallet(arrayData, resolve) {\n  \n    let fare_array = [];\n    let fare_array_cash = [];\n    let fare_array_wallet = [];\n    const Sum = (arr) => arr.reduce((num1, num2) => num1 + num2, 0);\n    \n    arrayData.map((ride) => {\n        fare_array.push(Number(ride[\"amount\"]));\n\n        // Get rides with CASH as payment method\n        let payment_method = ride[\"payment_method\"].toUpperCase().trim();\n        if (/CASH/i.test(payment_method)) {\n        // if (payment_method ===\"CASH\") /CASH/ makes sure of spacing\n        fare_array_cash.push(Number(ride[\"amount\"]));\n        } else {\n        fare_array_wallet.push(Number(ride[\"amount\"]));\n        }\n    });\n    \n    let totalCash = Sum(fare_array_cash);\n    let totalWallet = Sum(fare_array_wallet);\n    let totalCashWallet = totalCash + totalWallet;\n    let CashWalletObject = { totalCash, totalWallet, totalCashWallet };\n\n    resolve(CashWalletObject)\n\n    //return CashWalletObject\n}\n\n/**\n * @function progressScheduledCompleted : Returns the total count and money of trips in progress, \n *                                        scheduled and completed\n *                          Of a given array of rides (cash and delivery returned)\n * @param {array} arrayData : An array of rides from either an API or Database of rides with known\n *                            keys. \n * \n */\n\nfunction progressScheduledCompleted(arrayData, resolve) {\n    \n    let progress = arrayData.filter(current => {\n        return current.isAccepted && current.isPickedUp\n            && !current.isArrivedToDestination\n    })\n\n    let scheduled = arrayData.filter(current => {\n        let Value = current.request_type === \"scheduled\"\n        return Value\n    })\n    let completed = arrayData.filter( current => {\n        return current.isArrivedToDestination\n    })\n\n    let completed_today = arrayData.filter( current => {\n        let startOfToday = new Date()\n        let convertToday = new Date(startOfToday.setHours(0, 0, 0, 0)).toISOString()\n        //console.log(current.date_time)\n        console.log(startOfToday)\n        console.log(convertToday)\n        let today = current.date_time > convertToday\n        console.log(`Date comparison result: ${today}`)\n        return (today && current.isArrivedToDestination)\n    })\n    console.log(completed_today)\n    \n    Promise.all([\n            //let progressMoney = GetCashWallet(scheduled)\n        new Promise((res) => {\n            GetCashWallet(progress, res)\n        }),\n        new Promise((res) => {\n            GetCashWallet(scheduled, res)\n        }),\n        //let progressMoney = GetCashWallet(scheduled)\n        new Promise((res) => {\n            GetCashWallet(completed, res)\n        }),\n        new Promise((res) => {\n            GetCashWallet(completed_today,res)\n        })\n\n    ]).then((future) => {\n        let [progressMoney, scheduledMoney, completedMoney, completedMoneyToday] = future\n        let Object = {}\n        Object.moneyInprogress = progressMoney\n        Object.moneyScheduled = scheduledMoney\n        Object.moneyCompleted = completedMoney\n        Object.moneyCompletedToday = completedMoneyToday\n        Object.inprogress = progress.length\n        Object.scheduled = scheduled.length\n        Object.completed = completed.length\n        Object.completed_today = completed_today.length\n\n        resolve(Object)\n    }).catch((error) => {\n\n        console.log(error)\n        resolve({\n            response: \"error\",\n            flag: \"Possibly invalid input parameters\",\n        })\n    })\n \n}\n\n\n/**\n * \n * @function RideRow : Returns single ride details\n */\n\nconst RideRow = (props) => {\n    let statepick\n    let statepickword\n    let statedrop\n    let [details, setDetails] = useState(false)\n    let detailButton = details? \"less\":\"more\"\n    \n    if (props.ride.isDroppedPassenger===true) {\n        statedrop = \"YES\"\n    } else {\n        statedrop = \"NO\"\n    }\n\n    if (props.ride.isPickedUp === true) {\n        statepick = {backgroundColor:\"green\"}\n        statepickword = \"YES\"\n    } else {\n        statepick = {backgroundColor:\"red\"}\n        statepickword = \"NO\"\n    }\n    // Create a list of available destinations\n    const dest = () =>{\n        return props.ride.destinations.map((d) => {\n            return <ul><li>{d.location_name}</li></ul>\n        })\n    }\n    \n    return(\n        <>\n        <tr style ={{ backgroundColor: \"#ebd113\"}}>\n            <td>2</td>\n            <td>XN034</td>\n            <td>{ props.ride.passengers_number}</td>\n            <td>{ props.ride.request_type}</td>\n            <td>{ props.ride.date_time }</td>\n            <td>{ props.ride.date_time }</td>\n            <td style={ statepick }>{ statepickword }</td>\n            <td>{ statedrop }</td>\n            <td>{ props.ride.connect_type }</td>\n            <td><button className=\"btn btn-outline-info btn-sm\" onClick={ () => {\n                    setDetails(!details)  \n            }}>{ detailButton }</button></td>    \n        </tr>\n        <tr style = {{ display: details? \"\":\"none\" }}>\n            <td className=\"data-table\" >\n                <table className=\"table\" style={{ textAlign: \"center\"}} id=\"iner-table\">\n                    <thead className=\"thead-light\">\n                        <tr>\n                            <th colSpan=\"8\">Passenger info</th>\n                        </tr>\n                        <tr>\n                            <th>Name</th>\n                            <th>Surname</th>\n                            <th>Cellphone</th>\n                            <th>Gender</th>\n                            <th>Payment</th>\n                            <th>Amount</th>\n                            <th>From</th>\n                            <th>Destination(s)</th>\n                            <th>Wished pick up time</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td className=\"td-second\">{ props.ride.name }</td>\n                            <td className=\"td-second\">{props.ride.surname }</td>\n                            <td className=\"td-second\">{ props.ride.cellphone }</td>\n                            <td className=\"td-second\">{ props.ride.gender }</td>\n                            <td className=\"td-second\">{ props.ride.payment_method }</td>\n                            <td className=\"td-second\">N$ { props.ride.amount }</td>\n                            <td className=\"td-second\">fq{ props.ride.amount}</td>\n                            <td className=\"td-second\">{dest()}</td>\n                            <td className=\"td-second\">{props.ride.wished_pickup_time }</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </td>\n        </tr>\n       </>\n    )\n}\n\n/**\n * @function RideOverview : Main function rendering the rides overview page\n */\n\nfunction RideOverview() {\n\n\n    let [rides, setRides] = useState([])   // Main ride list of objects\n    let [inProgress, setInProgress] = useState(true)\n    let [scheduled, setScheduled] = useState(false)\n    let [completed, setCompleted] = useState(false)\n    let [InprogressCount, setInProgressCount] = useState(0)\n    let [ScheduledCount, setScheduledCount] = useState(0)\n    let [CompletedCount, setCompletedCount] = useState(0)\n    let [CompletedTodayCount, setCompletedTodayCount] = useState(0)\n    let [moneyInprogress, setMoneyInProgress] = useState({})\n    let [moneyScheduled, setMoneyScheduled] = useState({})\n    let [moneyCompleted, setMoneyCompleted] = useState({})\n    let [moneyCompletedToday, setMoneyCompletedToday] = useState({})\n\n    /*let [passengers_number, setPassengersNumber] = useState(0)\n    let [request_type, setRequestType] = useState(0)\n    let [date_time, setDateTime] = useState(0)\n    let [isPickedUp, setIsPickedUp] = useState(false)\n    let [isDroppedPassenger, setIsDroppedPassenger] = useState(false)\n    let [isDroppedDriver, setIsDroppedDriver] = useState(false)\n    let [connect_type, setConnectType] = useState('')\n    let [payment_method, setPaymentMethod] = useState('')\n    let [amount, setAmount] = useState(0)\n    let [destinations, setDestinations] = useState([])\n    let [name, setName] = useState('')\n    let [surname, setSurname] = useState('')\n    let [gender, setGender] = useState('')\n    let [cellphone, setCellphone] = useState('')  */\n    \n    let ENDPOINT = 'localhost:5558' \n\n    useEffect(() => {\n        let socket = io(ENDPOINT, { transports: [\"websocket\", \"polling\", \"flashsocket\"]})\n        const interval = setInterval(() => {\n            console.log(\"kaputo@taxiconnect\")\n            socket.on(\"getRideOverview-response\", (data) => {\n                if ((data !== undefined) && (data != null)) {\n                    /* Do something\n                    data.map((ride) => {\n                        console.log(ride)\n                    }) */\n                    setRides(data)\n                    // Get inprogress, scheduled and completed data to update count state\n                    new Promise((res) => {\n                        progressScheduledCompleted(data, res)\n                    }).then((future) => {\n                        console.log(future)\n                        setInProgressCount(future.inprogress)\n                        setMoneyInProgress(future.moneyInprogress)\n                        setScheduledCount(future.scheduled)\n                        setMoneyScheduled(future.moneyScheduled)\n                        setCompletedCount(future.completed)\n                        setMoneyCompleted(future.moneyCompleted)\n                        setCompletedTodayCount(future.completed_today)\n                        setMoneyCompletedToday(future.moneyCompletedToday)\n                        \n                    }).catch((error) => {\n                        console.log(error)\n                    })\n\n                } else {\n                    console.log(data.error) // data.error ?\n                    alert(\"Something went wrong while retrieving Data\")\n                }\n            })\n            socket.emit(\"getRideOverview\", {data: \"Get ride-overview Data!\"})\n        },2000)\n\n        return( () => {\n            clearInterval(interval)\n        })\n    \n    }, [\n        // re-render whenever any of these changes\n        rides,\n        ENDPOINT\n    ])\n\n    /**\n     * @function rideListInProgress : returns the list of rides in progress\n     * @function rideListScheduled : returns the list of scheduled rides\n     * @function rideListCompleted : returns the list of completed rides\n     * \n     */\n    \n    const rideListInProgress = () => {\n\n        return rides.map( currentRide => {\n         \n            if ( currentRide.isAccepted && currentRide.isPickedUp \n                && !currentRide.isArrivedToDestination) {\n                return <RideRow ride={currentRide}  />\n            } else { \n                //! Do nothing (Do not add the ride to the list if not in progress)\n             }\n        })\n    }\n\n    const rideListScheduled = () => {\n        return rides.map( currentRide => {\n            if ( currentRide.request_type === \"scheduled\") {\n                \n                return <RideRow ride={currentRide}  />\n            } else { \n                //! Do nothing (Do not add the ride to the list if not scheduled)\n             }\n        })\n    }\n\n    const rideListCompleted = () => {\n        return rides.map( currentRide => {\n            if ( currentRide.isArrivedToDestination) {\n                \n                return <RideRow ride={currentRide}  />\n            } else { \n                //! Do nothing --> Do not add the ride to the list if not completed\n                //! the ride is completed upon confirmation of either driver or passenger\n                //! Further display difference of both shall be done upon rendering of the row\n             }\n        })\n    }\n\n    const title_style = {\n        textAlign: \"center\",\n        marginTop: 10,\n        marginBottom: 15\n    }\n    const subtitle_style = {\n        textAlign: \"center\",\n        marginTop: 5,\n        marginBottom: 10\n    }\n\n    return(\n       \n        <div>\n\n            <div className=\"wrapper\">\n                <div className=\"left-column\">\n                <Sidebar />\n                </div>\n                <div className=\"right-column\" >\n                    <h1 style={ title_style }> Rides Overview </h1>\n                    <button style={{ marginLeft: 25}} className=\"btn btn-outline-info btn-sm \" onClick={ () => {\n                    setScheduled (false)\n                    setCompleted(false)\n                    setInProgress(true)  \n                    }}>Rides in progress [{ InprogressCount }]</button>\n\n                    <button style={{ marginLeft: 35}} className=\"btn btn-outline-info btn-sm\" onClick={ () => {\n                    setInProgress (false)\n                    setCompleted(false)\n                    setScheduled(true)  \n                    }}>Scheduled rides [{ ScheduledCount }]</button>\n\n                    <button style={{ marginLeft: 35}} className=\"btn btn-outline-info btn-sm\" onClick={ () => {\n                    setInProgress (false)\n                    setCompleted(true)\n                    setScheduled(false)  \n                    }}>Completed rides [{ CompletedCount }]</button>\n\n                        <div style = {{ display: inProgress? \"\":\"none\" }}>\n                            \n                            <hr></hr>\n                            \n                            <div id=\"container\">\n                                \n                                <div>\n                                <h1 style={{ fontSize: 'large', color:\"blue\"}}> N$ { moneyInprogress[\"totalCash\"] }\n                                    <span style={{ fontSize: 'small', color:\"black\"}}> cash</span> \n                                </h1>\n                                </div>\n                                <div>\n                                <h1 style={{ fontSize: 'large', color:\"blue\"}}> N$ { moneyInprogress[\"totalWallet\"] }\n                                    <span style={{ fontSize: 'small', color:\"black\"}}> wallet</span> \n                                </h1>\n                                </div>\n                                <div>\n                                <h1 style={{ fontSize: 'large', color:\"blue\"}}> N$ { moneyInprogress[\"totalCashWallet\"] }\n                                    <span style={{ fontSize: 'small', color:\"black\"}}> Total</span> \n                                </h1>\n                                </div>   \n                            </div>\n                            <hr></hr>\n                            <h5 style={{ width: 35, margin: \"auto\" }}>TODAY</h5>\n                            <div id=\"container-low\">\n                                <div >\n                                    <h1 style={{ fontSize: 'large', color:\"white\", textAlign: \"center\"}}> N$ { moneyCompletedToday[\"totalCash\"]} \n                                        <span style={{ fontSize: 'small'}}> cash</span> \n                                    </h1>\n                                </div>\n                                <div >\n                                    <h1 style={{ fontSize: 'large', color:\"white\", textAlign: \"center\"}}> N$ { moneyCompletedToday[\"totalWallet\"]}\n                                        <span style={{ fontSize: 'small'}}> wallet</span> \n                                    </h1>\n                                </div>\n                                <div >\n                                    <h1 style={{ fontSize: 'large', color:\"white\", textAlign: \"center\"}}> N$ { moneyCompletedToday[\"totalCashWallet\"]} \n                                        <span style={{ fontSize: 'small'}}> total</span> \n                                    </h1>\n                                </div>\n                                <div >\n                                    <h1 style={{ fontSize: 'large', color:\"white\", textAlign: \"center\"}}> { CompletedTodayCount } \n                                        <span style={{ fontSize: 'small', }}> rides</span> \n                                    </h1>\n                                </div>\n\n                            </div>\n                            <h3 style={ subtitle_style }>Rides in progress </h3>\n                            <table className=\"table\" style={{ textAlign: \"center\"}}>\n                                <thead className=\"thead-light\">\n                                    <tr>\n                                        <th>#</th>\n                                        <th>Taxi number</th>\n                                        <th>Passengers</th>\n                                        <th>Request type</th>\n                                        <th>Date</th>\n                                        <th>Time requested</th>\n                                        <th>Client picked up</th>\n                                        <th>client dropped off</th>\n                                        <th>Connect type</th>\n                                        <th>...</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    { rideListInProgress() }\n                                </tbody>\n                            </table>\n                        </div>\n\n                        <div style = {{ display: scheduled? \"\":\"none\" }}>\n                            <h3 style={ subtitle_style }>Scheduled rides </h3>\n                            <hr></hr>\n                            <div id=\"container\">\n                                \n                                <div>\n                                <h1 style={{ fontSize: 'large', color:\"blue\"}}> N$ { moneyScheduled[\"totalCash\"] }\n                                    <span style={{ fontSize: 'small', color:\"black\"}}> cash</span> \n                                </h1>\n                                </div>\n                                <div>\n                                <h1 style={{ fontSize: 'large', color:\"blue\"}}> N$ { moneyScheduled[\"totalWallet\"] }\n                                    <span style={{ fontSize: 'small', color:\"black\"}}> wallet</span> \n                                </h1>\n                                </div>\n                                <div>\n                                <h1 style={{ fontSize: 'large', color:\"blue\"}}> N$ { moneyScheduled[\"totalCashWallet\"] }\n                                    <span style={{ fontSize: 'small', color:\"black\"}}> Total</span> \n                                </h1>\n                                </div>\n                               \n                            </div>\n                            <hr></hr>\n                         \n                            <table className=\"table\" style={{ textAlign: \"center\"}}>\n                                <thead className=\"thead-light\">\n                                    <tr>\n                                        <th>##</th>\n                                        <th>Taxi number</th>\n                                        <th>Passengers</th>\n                                        <th>Request type</th>\n                                        <th>Date</th>\n                                        <th>Time requested</th>\n                                        <th>Client picked up</th>\n                                        <th>client dropped off</th>\n                                        <th>Connect type</th>\n                                        <th>...</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    { rideListScheduled() }\n                                </tbody>\n                            </table>\n                        </div>\n\n                        <div style = {{ display: completed? \"\":\"none\" }}>\n                            <h3 style={ subtitle_style }>Completed rides</h3>\n                            <hr></hr>\n                            <div id=\"container\">\n                                \n                                <div>\n                                <h1 style={{ fontSize: 'large', color:\"blue\"}}> N$ { moneyCompleted[\"totalCash\"] }\n                                    <span style={{ fontSize: 'small', color:\"black\"}}> cash</span> \n                                </h1>\n                                </div>\n                                <div>\n                                <h1 style={{ fontSize: 'large', color:\"blue\"}}> N$ { moneyCompleted[\"totalWallet\"] }\n                                    <span style={{ fontSize: 'small', color:\"black\"}}> wallet</span> \n                                </h1>\n                                </div>\n                                <div>\n                                <h1 style={{ fontSize: 'large', color:\"blue\"}}> N$ { moneyCompleted[\"totalCashWallet\"] }\n                                    <span style={{ fontSize: 'small', color:\"black\"}}> Total</span> \n                                </h1>\n                                </div>\n                                <div style={{ backgroundColor: \"gray\"}}>\n                                <h1 style={{ fontSize: 'x-large', color:\"blue\"}}> N$ 20\n                                    <span style={{ fontSize: 'small', color:\"black\"}}> today</span> \n                                </h1>\n                                </div>\n                            </div>\n                            <hr></hr>\n                            <table className=\"table\" style={{ textAlign: \"center\"}}>\n                                <thead className=\"thead-light\">\n                                    <tr>\n                                        <th>###</th>\n                                        <th>Taxi number</th>\n                                        <th>Passengers</th>\n                                        <th>Request type</th>\n                                        <th>Date</th>\n                                        <th>Time requested</th>\n                                        <th>Client picked up</th>\n                                        <th>client dropped off</th>\n                                        <th>Connect type</th>\n                                        <th>...</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    { rideListCompleted() }\n                                </tbody>\n                            </table>\n                        </div>\n                </div>\n            </div>\n   \n        </div>\n    \n    )\n}\n\nexport default RideOverview","/home/mack/Documents/Admin/Admin-App/client/adminui/src/components/deliveryOverview/deliveryOverview.js",["62","63","64","65"],"import React, {useState, useEffect} from \"react\"\nimport io from 'socket.io-client'\nimport \"./deliveryOverview.css\"\nimport Sidebar from \"../sidebar/sidebar\"\n\n\n\n/**\n * @function GetCashWallet : Returns the total money of trips in progress, scheduled and completed\n *                          Of a given array of rides (cash and delivery returned)\n * @param {array} arrayData : An array of rides from either an API or Database of rides with known\n *                            keys. \n * \n */\n\nfunction GetCashWallet(arrayData, resolve) {\n  \n    let fare_array = [];\n    let fare_array_cash = [];\n    let fare_array_wallet = [];\n    const Sum = (arr) => arr.reduce((num1, num2) => num1 + num2, 0);\n    \n    arrayData.map((ride) => {\n        fare_array.push(Number(ride[\"amount\"]));\n\n        // Get rides with CASH as payment method\n        let payment_method = ride[\"payment_method\"].toUpperCase().trim();\n        if (/CASH/i.test(payment_method)) {\n        // if (payment_method ===\"CASH\") /CASH/ makes sure of spacing\n        fare_array_cash.push(Number(ride[\"amount\"]));\n        } else {\n        fare_array_wallet.push(Number(ride[\"amount\"]));\n        }\n    });\n    \n    let totalCash = Sum(fare_array_cash);\n    let totalWallet = Sum(fare_array_wallet);\n    let totalCashWallet = totalCash + totalWallet;\n    let CashWalletObject = { totalCash, totalWallet, totalCashWallet };\n\n    resolve(CashWalletObject)\n\n    //return CashWalletObject\n}\n\n/**\n * @function progressScheduledCompleted : Returns the total count and money of trips in progress, \n *                                        scheduled and completed\n *                          Of a given array of rides (cash and delivery returned)\n * @param {array} arrayData : An array of rides from either an API or Database of rides with known\n *                            keys. \n * \n */\n\nfunction progressScheduledCompleted(arrayData, resolve) {\n    \n    let progress = arrayData.filter(current => {\n        return current.isAccepted && current.isPickedUp\n            && !current.isArrivedToDestination\n    })\n\n    let scheduled = arrayData.filter(current => {\n        let Value = current.request_type === \"scheduled\"\n        return Value\n    })\n    let completed = arrayData.filter( current => {\n        return current.isArrivedToDestination\n    })\n    \n    Promise.all([\n            //let progressMoney = GetCashWallet(scheduled)\n        new Promise((res) => {\n            GetCashWallet(progress, res)\n        }),\n        new Promise((res) => {\n            GetCashWallet(scheduled, res)\n        }),\n        //let progressMoney = GetCashWallet(scheduled)\n        new Promise((res) => {\n            GetCashWallet(completed, res)\n        })\n\n    ]).then((future) => {\n        let [progressMoney, scheduledMoney, completedMoney] = future\n        let Object = {}\n        Object.moneyInprogress = progressMoney\n        Object.moneyScheduled = scheduledMoney\n        Object.moneyCompleted = completedMoney\n        Object.inprogress = progress.length\n        Object.scheduled = scheduled.length\n        Object.completed = completed.length\n\n        resolve(Object)\n    }).catch((error) => {\n\n        console.log(error)\n        resolve({\n            response: \"error\",\n            flag: \"Possibly invalid input parameters\",\n        })\n    })\n \n}\n\n\n\n\n\n/**\n * \n * @function DeliveryRow : Returns single ride details\n */\n\nconst DeliveryRow = (props) => {\n    let statepick\n    let statepickword\n    let statedrop\n    let [details, setDetails] = useState(false)\n    let detailButton = details? \"less\":\"more\"\n    \n    if (props.delivery.isDroppedPassenger===true) {\n        statedrop = \"YES\"\n    } else {\n        statedrop = \"NO\"\n    }\n\n    if (props.delivery.isPickedUp === true) {\n        statepick = {backgroundColor:\"green\"}\n        statepickword = \"YES\"\n    } else {\n        statepick = {backgroundColor:\"red\"}\n        statepickword = \"NO\"\n    }\n    // Create a list of available destinations\n    const dest = () =>{\n        return props.delivery.destinations.map((d) => {\n            return <ul><li>{d.location_name}</li></ul>\n        })\n    }\n    return(\n        <>\n        <tr style ={{ backgroundColor: \"#ebd113\"}}>\n            <td>2</td>\n            <td>YN067D</td>\n            <td>{ props.delivery.origin}</td>\n            <td>{ props.delivery.request_type}</td>\n            <td>{ props.delivery.date_time }</td>\n            <td>{ props.delivery.date_time }</td>\n            <td style={ statepick }>{ statepickword }</td>\n            <td>{ statedrop }</td>\n            <td>{ props.delivery.delivery_receiver } ({props.delivery.delivery_phone})</td>\n            <td><button className=\"btn btn-outline-info btn-sm\" onClick={ () => {\n                    setDetails(!details)  \n            }}>{ detailButton }</button></td>    \n        </tr>\n        <tr style = {{ display: details? \"\":\"none\" }}>\n            <td className=\"data-table\" >\n                <table className=\"table\" style={{ textAlign: \"center\"}} id=\"iner-table\">\n                    <thead className=\"thead-light\">\n                        <tr>\n                            <th colSpan=\"8\">Requestor info</th>\n                        </tr>\n                        <tr>\n                            <th>Name</th>\n                            <th>Surname</th>\n                            <th>Cellphone</th>\n                            <th>Gender</th>\n                            <th>Payment</th>\n                            <th>Amount</th>\n                            <th>From</th>\n                            <th>Destination(s)</th>\n                            <th>Wished pick up time</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td className=\"td-second\">{ props.delivery.name }</td>\n                            <td className=\"td-second\">{props.delivery.surname }</td>\n                            <td className=\"td-second\">{ props.delivery.cellphone }</td>\n                            <td className=\"td-second\">{ props.delivery.gender }</td>\n                            <td className=\"td-second\">{ props.delivery.payment_method }</td>\n                            <td className=\"td-second\">N$ { props.delivery.amount }</td>\n                            <td className=\"td-second\">fq{ props.delivery.amount}</td>\n                            <td className=\"td-second\">{dest()}</td>\n                            <td className=\"td-second\">{props.delivery.wished_pickup_time }</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </td>\n        </tr>\n       </>\n        \n\n    )\n}\n\n\nfunction DeliveryOverview() {\n\n\n    let [deliveries, setDeliveries] = useState([])   // Main ride list of objects\n    let [inProgress, setInProgress] = useState(true)\n    let [scheduled, setScheduled] = useState(false)\n    let [completed, setCompleted] = useState(false)\n    let [InprogressCount, setInProgressCount] = useState(0)\n    let [ScheduledCount, setScheduledCount] = useState(0)\n    let [CompletedCount, setCompletedCount] = useState(0)\n    let [moneyInprogress, setMoneyInProgress] = useState({})\n    let [moneyScheduled, setMoneyScheduled] = useState({})\n    let [moneyCompleted, setMoneyCompleted] = useState({})\n    /*let [passengers_number, setPassengersNumber] = useState(0)\n    let [request_type, setRequestType] = useState(0)\n    let [date_time, setDateTime] = useState(0)\n    let [isPickedUp, setIsPickedUp] = useState(false)\n    let [isDroppedPassenger, setIsDroppedPassenger] = useState(false)\n    let [isDroppedDriver, setIsDroppedDriver] = useState(false)\n    let [connect_type, setConnectType] = useState('')\n    let [payment_method, setPaymentMethod] = useState('')\n    let [amount, setAmount] = useState(0)\n    let [destinations, setDestinations] = useState([])\n    let [name, setName] = useState('')\n    let [surname, setSurname] = useState('')\n    let [gender, setGender] = useState('')\n    let [cellphone, setCellphone] = useState('')  */\n    \n    let ENDPOINT = 'localhost:5558' \n\n    useEffect(() => {\n        let socket = io(ENDPOINT, { transports: [\"websocket\", \"polling\", \"flashsocket\"]})\n        const interval = setInterval(() => {\n            console.log(\"kaputo@taxiconnect-delivery\")\n            socket.on(\"getDeliveryOverview-response\", (data) => {\n                if ((data !== undefined) && (data != null)) {\n                    /* Do something\n                    data.map((ride) => {\n                        console.log(ride)\n                    }) */\n                    setDeliveries(data)\n                    // Get inprogress, scheduled and completed data to update count state\n                    new Promise((res) => {\n                        progressScheduledCompleted(data, res)\n                    }).then((future) => {\n                        console.log(future)\n                        setInProgressCount(future.inprogress)\n                        setMoneyInProgress(future.moneyInprogress)\n                        setScheduledCount(future.scheduled)\n                        setMoneyScheduled(future.moneyScheduled)\n                        setCompletedCount(future.completed)\n                        setMoneyCompleted(future.moneyCompleted)\n                    }).catch((error) => {\n                        console.log(error)\n                    })\n                } else {\n                    console.log(data.error) // data.error ?\n                    alert(\"Something went wrong while retrieving Data\")\n                }\n            })\n            socket.emit(\"getDeliveryOverview\", {data: \"Get delivery-overview Data!\"})\n        },1000)\n\n        return( () => {\n            clearInterval(interval)\n        })\n    \n    }, [\n        // re-render whenever any of these changes\n        deliveries,\n        ENDPOINT\n    ])\n\n    /**\n     * @function deliveryListInProgress : returns the list of rides in progress\n     * @function deliveryListScheduled : returns the list of scheduled rides\n     * @function deliveyListCompleted : returns the list of completed rides\n     * \n     */\n    const deliveryListInProgress = () => {\n        return deliveries.map( currentDelivery => {\n            if ( currentDelivery.isAccepted && currentDelivery.isPickedUp \n                && !currentDelivery.isArrivedToDestination) {\n                \n                return <DeliveryRow delivery={currentDelivery}  />\n            } else { \n                //! Do nothing (Do not add the delivery to the list if not in progress)\n             }\n            \n        })\n    }\n\n    const deliveryListScheduled = () => {\n        return deliveries.map( currentDelivery => {\n            if ( currentDelivery.request_type === \"scheduled\") {\n                \n                return <DeliveryRow delivery={currentDelivery}  />\n            } else { \n                //! Do nothing (Do not add the delivery to the list if not scheduled)\n             }\n        })\n    }\n\n    const deliveryListCompleted = () => {\n        return deliveries.map( currentDelivery => {\n            if ( currentDelivery.isArrivedToDestination) {\n                \n                return <DeliveryRow delivery={currentDelivery}  />\n            } else { \n                //! Do nothing --> Do not add the delivery to the list if not completed\n                //! the delivery is completed upon confirmation of either driver or receiver\n                //! Further display difference of both shall be done upon rendering of the row\n             }\n        })\n    }\n\n    const title_style = {\n        textAlign: \"center\",\n        marginTop: 10,\n        marginBottom: 15\n    }\n    const subtitle_style = {\n        textAlign: \"center\",\n        marginTop: 5,\n        marginBottom: 10\n    }\n\n    return(\n       \n        <div>\n\n            <div className=\"wrapper\">\n                <div className=\"left-column\">\n                <Sidebar />\n                </div>\n                <div className=\"right-column\" >\n                    <h1 style={ title_style }> Deliveries Overview </h1>\n                    <button style={{ marginLeft: 25}} className=\"btn btn-outline-info btn-sm \" onClick={ () => {\n                    setScheduled (false)\n                    setCompleted(false)\n                    setInProgress(true)  \n                    }}>Deliveries in progress [{ InprogressCount }]</button>\n\n                    <button style={{ marginLeft: 35}} className=\"btn btn-outline-info btn-sm\" onClick={ () => {\n                    setInProgress (false)\n                    setCompleted(false)\n                    setScheduled(true)  \n                    }}>Scheduled Deliveries [{ ScheduledCount }]</button>\n\n                    <button style={{ marginLeft: 35}} className=\"btn btn-outline-info btn-sm\" onClick={ () => {\n                    setInProgress (false)\n                    setCompleted(true)\n                    setScheduled(false)  \n                    }}>Completed Deliveries [{ CompletedCount }]</button>\n\n                    <div style = {{ display: inProgress? \"\":\"none\" }}>\n                        <h3 style={ subtitle_style }>Deliveries in progress </h3>\n                        <hr></hr>\n                            <div id=\"container\">\n                                \n                                <div>\n                                <h1 style={{ fontSize: 'large', color:\"blue\"}}> N$ { moneyInprogress[\"totalCash\"] }\n                                    <span style={{ fontSize: 'small', color:\"black\"}}> cash</span> \n                                </h1>\n                                </div>\n                                <div>\n                                <h1 style={{ fontSize: 'large', color:\"blue\"}}> N$ { moneyInprogress[\"totalWallet\"] }\n                                    <span style={{ fontSize: 'small', color:\"black\"}}> wallet</span> \n                                </h1>\n                                </div>\n                                <div>\n                                <h1 style={{ fontSize: 'large', color:\"blue\"}}> N$ { moneyInprogress[\"totalCashWallet\"] }\n                                    <span style={{ fontSize: 'small', color:\"black\"}}> Total</span> \n                                </h1>\n                                </div>\n                                <div style={{ backgroundColor: \"gray\"}}>\n                                <h1 style={{ fontSize: 'x-large', color:\"blue\"}}> N$ 20\n                                    <span style={{ fontSize: 'small', color:\"black\"}}> today</span> \n                                </h1>\n                                </div>\n                            </div>\n                            <hr></hr>\n                        <table className=\"table\" style={{ textAlign: \"center\"}}>\n                            <thead className=\"thead-light\">\n                                <tr>\n                                    <th>#</th>\n                                    <th>Taxi number</th>\n                                    <th>Origin</th>\n                                    <th>Request type</th>\n                                    <th>Date</th>\n                                    <th>Time requested</th>\n                                    <th>Item picked up</th>\n                                    <th>Item dropped off</th>\n                                    <th>Receiver</th>\n                                    <th>...</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                { deliveryListInProgress () }\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <div style = {{ display: scheduled? \"\":\"none\" }}>\n                        <h3 style={ subtitle_style }>Scheduled deliveries </h3>\n                        <hr></hr>\n                            <div id=\"container\">\n                                \n                                <div>\n                                <h1 style={{ fontSize: 'large', color:\"blue\"}}> N$ { moneyScheduled[\"totalCash\"] }\n                                    <span style={{ fontSize: 'small', color:\"black\"}}> cash</span> \n                                </h1>\n                                </div>\n                                <div>\n                                <h1 style={{ fontSize: 'large', color:\"blue\"}}> N$ { moneyScheduled[\"totalWallet\"] }\n                                    <span style={{ fontSize: 'small', color:\"black\"}}> wallet</span> \n                                </h1>\n                                </div>\n                                <div>\n                                <h1 style={{ fontSize: 'large', color:\"blue\"}}> N$ { moneyScheduled[\"totalCashWallet\"] }\n                                    <span style={{ fontSize: 'small', color:\"black\"}}> Total</span> \n                                </h1>\n                                </div>\n                                <div style={{ backgroundColor: \"gray\"}}>\n                                <h1 style={{ fontSize: 'x-large', color:\"blue\"}}> N$ 20\n                                    <span style={{ fontSize: 'small', color:\"black\"}}> today</span> \n                                </h1>\n                                </div>\n                            </div>\n                            <hr></hr>\n                        <table className=\"table\" style={{ textAlign: \"center\"}}>\n                            <thead className=\"thead-light\">\n                                <tr>\n                                    <th>##</th>\n                                    <th>Taxi number</th>\n                                    <th>Origin</th>\n                                    <th>Request type</th>\n                                    <th>Date</th>\n                                    <th>Time requested</th>\n                                    <th>Item picked up</th>\n                                    <th>Item dropped off</th>\n                                    <th>Receiver</th>\n                                    <th>...</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                { deliveryListScheduled() }\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <div style = {{ display: completed? \"\":\"none\" }}>\n                        <h3 style={ subtitle_style }>Completed deliveries </h3>\n                        <hr></hr>\n                            <div id=\"container\">\n                                \n                                <div>\n                                <h1 style={{ fontSize: 'large', color:\"blue\"}}> N$ { moneyCompleted[\"totalCash\"] }\n                                    <span style={{ fontSize: 'small', color:\"black\"}}> cash</span> \n                                </h1>\n                                </div>\n                                <div>\n                                <h1 style={{ fontSize: 'large', color:\"blue\"}}> N$ { moneyCompleted[\"totalWallet\"] }\n                                    <span style={{ fontSize: 'small', color:\"black\"}}> wallet</span> \n                                </h1>\n                                </div>\n                                <div>\n                                <h1 style={{ fontSize: 'large', color:\"blue\"}}> N$ { moneyCompleted[\"totalCashWallet\"] }\n                                    <span style={{ fontSize: 'small', color:\"black\"}}> Total</span> \n                                </h1>\n                                </div>\n                                <div style={{ backgroundColor: \"gray\"}}>\n                                <h1 style={{ fontSize: 'x-large', color:\"blue\"}}> N$ 20\n                                    <span style={{ fontSize: 'small', color:\"black\"}}> today</span> \n                                </h1>\n                                </div>\n                            </div>\n                            <hr></hr>\n                        <table className=\"table\" style={{ textAlign: \"center\"}}>\n                            <thead className=\"thead-light\">\n                                <tr>\n                                    <th>###</th>\n                                    <th>Taxi number</th>\n                                    <th>Origin</th>\n                                    <th>Request type</th>\n                                    <th>Date</th>\n                                    <th>Time requested</th>\n                                    <th>Item picked up</th>\n                                    <th>Item dropped off</th>\n                                    <th>Receiver</th>\n                                    <th>...</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                { deliveryListCompleted() }\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n   \n        </div>\n    \n    )\n}\n\nexport default DeliveryOverview","/home/mack/Documents/Admin/Admin-App/client/adminui/src/components/driversList/driverList.js",[],"/home/mack/Documents/Admin/Admin-App/client/adminui/src/components/passengersList/passengerList.js",["66"],"import React, { useState, useEffect } from \"react\"\nimport Sidebar from \"../sidebar/sidebar\"\nimport io from \"socket.io-client\"\nimport \"./PassengerList.css\"\nimport { FaUserAlt } from \"react-icons/fa\"\n\n\nconst PassengerRow = (props) => {\n    return(\n        <tr>\n            <td><FaUserAlt size={30}/></td>\n            <td>{ props.passenger.name}</td>\n            <td>{ props.passenger.surname }</td>\n            <td>{ props.passenger.gender }</td>\n            <td>{ props.passenger.phone_number }</td>\n            <td>{ props.passenger.email }</td>\n            <td>{ props.passenger.date_registered }</td>\n            <td>{ props.passenger.totaltrip }</td>\n        </tr>\n    )\n}\n\n\nfunction PassengerList() {\n\n    let [passengers, setPassengers] = useState([])\n    let [totalNewPassengerToday, setTotalNewPassengerToday] = useState(0)\n\n    let ENDPOINT = 'localhost:5558'\n\n    useEffect(() => { \n        let socket = io(ENDPOINT, {transports: ['websocket', 'polling', 'flashsocket']})\n        const interval = setInterval(() => {\n            console.log(\"passengerslist@taxiconnect\")\n            socket.on(\"getPassengers-feedback\", (data) => {\n                if ((data !== undefined) && (data != null)) {\n                    console.log(data)\n                    //mydata = data\n                    setPassengers(data)\n \n                }\n            });\n          \n            socket.emit(\"getPassengers\", {data:'getting passengers'})\n            \n            // Get the statistics \n            /*socket.on(\"statistics-response\", (data) => {\n\n                setTotalNewPassengerToday(data[\"totalNewPassengerToday\"])\n            });\n            socket.emit(\"statistics\", {data:'specs'}) */\n\n\n        }, 2000)\n\n        return( () => {\n            clearInterval(interval)\n        })\n    },[ // Re-render whenever any of the following variables changes\n        \n        ENDPOINT\n    ])\n\n    const passengerData = () => {\n        return passengers.map((passenger) => {\n            return <PassengerRow passenger={passenger} />\n        })\n        \n    }\n    const title_style = {\n        textAlign: \"center\",\n        marginTop: 10,\n        marginBottom: 15\n    }\n\n    //console.log(passengers) \n    return(\n        <div>\n            <div className=\"wrapper\">\n                <div className=\"left-column\">\n                <Sidebar />\n                </div>\n                <div className=\"right-column\" >\n                    <h2 style={ title_style }>Registered Users</h2>\n                    <hr></hr>\n                            <div id=\"container-driver\">\n                                \n                                <div>\n                                <h1 style={{ fontSize: 'large', color:\"black\", width: \"auto\"}}> Total sign up:  \n                                    <span style={{ fontSize: 'large', color:\"blue\"}}> { passengers.length } </span>  \n                                </h1>\n                                </div>\n                                <div>\n                                <h1 style={{ fontSize: 'large', color:\"black\", width: \"auto\"}}> New sign up (today):  \n                                    <span style={{ fontSize: 'large', color:\"blue\"}}> { totalNewPassengerToday } </span>  \n                                </h1>\n                                </div>\n                          \n                            </div>\n                    <hr></hr>\n\n                    <table className=\"table-striped\" style={{ margin: 15}}>\n                        <thead className=\"thead-light\">\n                            <tr>\n                                <th>Profile</th>\n                                <th>Name</th>\n                                <th>Surname</th>\n                                <th>Genger </th>\n                                <th>Phone</th>\n                                <th>Email</th>\n                                <th>Signed up</th>\n                                <th>Total trips</th>\n                            </tr>\n\n                        </thead>\n                        <tbody>\n                          { passengerData() }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PassengerList","/home/mack/Documents/Admin/Admin-App/client/adminui/src/components/partners/partnersAdmin.js",["67","68","69","70"],"/home/mack/Documents/Admin/Admin-App/client/adminui/src/components/partners/LoginFormPartner.js",["71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":2,"column":42,"nodeType":"78","messageId":"79","endLine":2,"endColumn":48},{"ruleId":"76","severity":1,"message":"80","line":2,"column":27,"nodeType":"78","messageId":"79","endLine":2,"endColumn":33},{"ruleId":"81","severity":1,"message":"82","line":186,"column":100,"nodeType":"83","messageId":"84","endLine":186,"endColumn":102},{"ruleId":"85","severity":1,"message":"86","line":22,"column":26,"nodeType":"87","messageId":"88","endLine":22,"endColumn":28},{"ruleId":"85","severity":1,"message":"89","line":302,"column":39,"nodeType":"87","messageId":"90","endLine":302,"endColumn":41},{"ruleId":"85","severity":1,"message":"89","line":314,"column":39,"nodeType":"87","messageId":"90","endLine":314,"endColumn":41},{"ruleId":"85","severity":1,"message":"89","line":325,"column":39,"nodeType":"87","messageId":"90","endLine":325,"endColumn":41},{"ruleId":"85","severity":1,"message":"86","line":23,"column":26,"nodeType":"87","messageId":"88","endLine":23,"endColumn":28},{"ruleId":"85","severity":1,"message":"89","line":278,"column":48,"nodeType":"87","messageId":"90","endLine":278,"endColumn":50},{"ruleId":"85","severity":1,"message":"89","line":291,"column":48,"nodeType":"87","messageId":"90","endLine":291,"endColumn":50},{"ruleId":"85","severity":1,"message":"89","line":302,"column":48,"nodeType":"87","messageId":"90","endLine":302,"endColumn":50},{"ruleId":"76","severity":1,"message":"91","line":27,"column":34,"nodeType":"78","messageId":"79","endLine":27,"endColumn":59},{"ruleId":"76","severity":1,"message":"80","line":6,"column":27,"nodeType":"78","messageId":"79","endLine":6,"endColumn":33},{"ruleId":"76","severity":1,"message":"92","line":11,"column":10,"nodeType":"78","messageId":"79","endLine":11,"endColumn":15},{"ruleId":"76","severity":1,"message":"93","line":12,"column":10,"nodeType":"78","messageId":"79","endLine":12,"endColumn":18},{"ruleId":"94","severity":1,"message":"95","line":49,"column":7,"nodeType":"96","endLine":49,"endColumn":9,"suggestions":"97"},{"ruleId":"81","severity":1,"message":"98","line":46,"column":25,"nodeType":"83","messageId":"84","endLine":46,"endColumn":27},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'setTotalNewPassengerToday' is assigned a value but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.search'. Either include it or remove the dependency array.","ArrayExpression",["101"],"Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},"Update the dependencies array to be: [location.search]",{"range":"104","text":"105"},[1340,1342],"[location.search]"]